#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertPos;
layout(location = 1) in vec3 vertNorm;
uniform mat4 MVP;

// Output data; will be interpolated for each fragment.
out vec3 color;
out vec3 norm;

void main()
{
	// Output position of the vertex, in clip space : MVP * position
	gl_Position =  MVP*vec4(vertPos,1);
	norm = vertNorm;//(MVP*vec4(vertNorm,1)).xyz;

	// The color of each vertex will be interpolated
	// to produce the color of each fragment
	color = vec3(1,1,1);
}

